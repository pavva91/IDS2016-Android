package com.emergencyescape.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.emergencyescape.greendao.User;
import com.emergencyescape.greendao.Edge;
import com.emergencyescape.greendao.Node;
import com.emergencyescape.greendao.Maps;
import com.emergencyescape.greendao.Image;

import com.emergencyescape.greendao.UserDao;
import com.emergencyescape.greendao.EdgeDao;
import com.emergencyescape.greendao.NodeDao;
import com.emergencyescape.greendao.MapsDao;
import com.emergencyescape.greendao.ImageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig edgeDaoConfig;
    private final DaoConfig nodeDaoConfig;
    private final DaoConfig mapsDaoConfig;
    private final DaoConfig imageDaoConfig;

    private final UserDao userDao;
    private final EdgeDao edgeDao;
    private final NodeDao nodeDao;
    private final MapsDao mapsDao;
    private final ImageDao imageDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        edgeDaoConfig = daoConfigMap.get(EdgeDao.class).clone();
        edgeDaoConfig.initIdentityScope(type);

        nodeDaoConfig = daoConfigMap.get(NodeDao.class).clone();
        nodeDaoConfig.initIdentityScope(type);

        mapsDaoConfig = daoConfigMap.get(MapsDao.class).clone();
        mapsDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        edgeDao = new EdgeDao(edgeDaoConfig, this);
        nodeDao = new NodeDao(nodeDaoConfig, this);
        mapsDao = new MapsDao(mapsDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Edge.class, edgeDao);
        registerDao(Node.class, nodeDao);
        registerDao(Maps.class, mapsDao);
        registerDao(Image.class, imageDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        edgeDaoConfig.getIdentityScope().clear();
        nodeDaoConfig.getIdentityScope().clear();
        mapsDaoConfig.getIdentityScope().clear();
        imageDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public EdgeDao getEdgeDao() {
        return edgeDao;
    }

    public NodeDao getNodeDao() {
        return nodeDao;
    }

    public MapsDao getMapsDao() {
        return mapsDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

}
